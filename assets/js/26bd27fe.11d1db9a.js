"use strict";(self.webpackChunkalthread=self.webpackChunkalthread||[]).push([[287],{9652:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var t=n(4848),r=n(8453);const i={sidebar_position:1},o="Utilisation des processus",c={id:"guide/process/simple-process",title:"Utilisation des processus",description:"Nous allons maintenant voir comment cr\xe9er et ex\xe9cuter des processus en Althread. Un processus est une unit\xe9 d'ex\xe9cution ind\xe9pendante qui peut s'ex\xe9cuter en parall\xe8le d'autres processus. Les processus peuvent communiquer entre eux en utilisant des variables partag\xe9es ou des canaux.",source:"@site/docs/guide/process/simple-process.md",sourceDirName:"guide/process",slug:"/guide/process/simple-process",permalink:"/althread/docs/guide/process/simple-process",draft:!1,unlisted:!1,editUrl:"https://github.com/romainbourdain/althread/tree/main/docs/guide/process/simple-process.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guideSidebar",previous:{title:"Syntaxe d'Althread",permalink:"/althread/docs/guide/getting-started/syntaxe"},next:{title:"(Arguments)",permalink:"/althread/docs/guide/process/arguments"}},d={},a=[{value:"Expression atomique",id:"expression-atomique",level:2}];function u(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"utilisation-des-processus",children:"Utilisation des processus"})}),"\n",(0,t.jsx)(s.p,{children:"Nous allons maintenant voir comment cr\xe9er et ex\xe9cuter des processus en Althread. Un processus est une unit\xe9 d'ex\xe9cution ind\xe9pendante qui peut s'ex\xe9cuter en parall\xe8le d'autres processus. Les processus peuvent communiquer entre eux en utilisant des variables partag\xe9es ou des canaux."}),"\n",(0,t.jsx)(s.h2,{id:"expression-atomique",children:"Expression atomique"}),"\n",(0,t.jsx)(s.p,{children:"Une expression atomique est la plus petite unit\xe9 d'ex\xe9cution. En althread, il existe 5 types d'expressions atomiques :"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"D\xe9claration"})," : ",(0,t.jsx)(s.code,{children:"let x = 5;"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Affectation"})," : ",(0,t.jsx)(s.code,{children:"x = 5;"}),",  ",(0,t.jsx)(s.code,{children:"x++;"})," ou ",(0,t.jsx)(s.code,{children:"x += 1"}),";"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Appel de fonction"})," : ",(0,t.jsx)(s.code,{children:'print("Hello world");'})]}),"\n",(0,t.jsx)(s.li,{}),"\n"]})]})}function l(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var t=n(6540);const r={},i=t.createContext(r);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);